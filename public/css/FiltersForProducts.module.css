/* FiltersForProducts.module.css - Updated for orange color scheme */

.filtersContainer {
  width: 100%;
  max-width: 100%; /* Match parent container width */
  margin-bottom: 1rem;
  padding: 0;
  background-color: white;
  /* border-radius: 0.5rem; */
  box-shadow: 0 4px 10px -2px rgba(0, 0, 0, 0.15);
  overflow: hidden;
  will-change: height, transform, opacity;
  transform-style: preserve-3d;
  backface-visibility: hidden;
  /* Changed gradient to use superlight-orange */
  /* background: linear-gradient(to bottom, #ffffff, var(--superlight-orange)); */
}

.filterControls {
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
  width: 100%;
  padding: 1rem;
  will-change: transform, opacity;
  box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.05);
}

/* Row for select filters */
.selectFiltersRow {
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
  width: 100%;
  /* Add small delay to each child when animating */
  transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
}

/* Row for checkbox filters */
.checkboxFiltersRow {
  display: flex;
  gap: 0.75rem;
  width: 100%;
  margin-top: 0.5rem;
  /* Add small delay to each child when animating */
  transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1) 0.05s;
}

.filterWrapper {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
}

/* FIXED: Select styling with correct state colors */
.filterSelect {
  width: 100%;
  padding: 0.6rem 0.75rem;
  border: 1px solid #e2e2e2;
  /* border-radius: 0.375rem; */
  font-size: 0.875rem;
  color: var(--lighter-gray); /* Default color as light gray for placeholder */
  background-color: white;
  cursor: pointer;
  transition: all 0.2s ease-in-out;
  /* Add subtle shadow for depth */
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
}

/* Hover state turns orange - add more specificity */
.filterSelect:hover {
  border-color: var(--saturated-orange);
  color: var(--dark-orange); /* Text turns orange on hover */
  transform: translateY(-1px);
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.filterSelect:focus {
  outline: none;
  border-color: var(--saturated-orange);
  box-shadow: 0 0 0 2px rgba(238, 135, 10, 0.1);
}

/* Make selected values blue - higher specificity */
.selectFiltersRow .filterSelect.hasValue {
  color: var(--saturated-blue) !important; /* Force blue color for selected values */
}

/* Keep the blue when hovering a selected value */
.selectFiltersRow .filterSelect.hasValue:hover {
  border-color: var(--saturated-orange);
  color: var(--saturated-blue) !important; /* Keep blue when hovering selected value */
}

/* Set the option styles */
.filterSelect option {
  color: var(--saturated-blue); /* Option items are blue in dropdown */
  background-color: white;
}

.filterSelect option:first-child {
  color: var(--lighter-gray); /* Placeholder option is gray */
}

.checkboxWrapper {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
}

.checkboxLabel {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  cursor: pointer;
  color: var(--dark-gray);
  font-size: 0.8rem;
  width: 100%;
  transition: transform 0.2s ease;
}

.checkboxLabel:hover {
  transform: translateX(2px);
  color: var(--saturated-orange);
}

/* Changed to blue for checkboxes */
.checkbox {
  width: 1rem;
  height: 1rem;
  cursor: pointer;
  accent-color: var(--saturated-blue); /* Blue checkboxes */
}

.resetButtonWrapper {
  display: flex;
  justify-content: center;
  width: 100%;
  /* Add small delay to button when animating */
  transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1) 0.1s;
}

.resetButton {
  padding: 0.6rem 1rem;
  border: 1px solid #e2e2e2;
  /* border-radius: 0.375rem; */
  background-color: white;
  color: var(--dark-gray);
  cursor: pointer;
  font-size: 0.875rem;
  transition: all 0.2s ease-in-out;
  text-align: center;
  width: 100%;
  max-width: 200px;
  position: relative; /* Added for positioning the filter count */
  /* Add subtle shadow for depth */
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
}

.resetButton:hover {
  background-color: var(--saturated-orange);
  border-color: var(--saturated-orange);
  color: white;
  transform: translateY(-2px);
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

/* Active (pressed) state for reset button */
.resetButton:active {
  background-color: var(--saturated-blue);
  border-color: var(--saturated-blue);
  color: white;
  transform: translateY(0);
}

.filterCount {
  position: absolute;
  top: -8px;
  right: -8px;
  display: flex;
  align-items: center;
  justify-content: center;
  min-width: 1.25rem;
  height: 1.25rem;
  padding: 0 0.25rem;
  background-color: var(--saturated-orange);
  color: white;
  border-radius: 9999px;
  font-size: 0.75rem;
  font-weight: 600;
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);
  border: 1px solid rgba(255, 255, 255, 0.2);
}

.dateRangeContainer {
  display: flex;
  flex-direction: column;
  width: 100%;
  padding: 0.75rem;
  /* border-radius: 0.375rem; */
  background-color: white;
  border: 1px solid #e2e2e2;
  /* Add subtle shadow for depth */
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
  /* Add small delay when animating */
  transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1) 0.08s;
}

.dateLabel {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  font-size: 0.875rem;
  margin-bottom: 0.5rem;
  color: var(--dark-gray);
}

.dateInputs {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  width: 100%;
}

.dateInput {
  width: 100%;
  padding: 0.6rem 0.75rem;
  border: 1px solid #e2e2e2;
  /* border-radius: 0.375rem; */
  font-size: 0.875rem;
  outline: none;
  transition: all 0.2s ease;
}

.dateInput:focus {
  border-color: var(--saturated-orange);
  box-shadow: 0 0 0 2px rgba(238, 135, 10, 0.1);
}

.dateInput:hover {
  border-color: var(--medium-gray);
}

/* Responsive improvements */
/* Small tablets (640px and up) */
@media (min-width: 640px) {
  .filterControls {
    gap: 1rem;
    padding: 1.25rem;
  }
  
  .checkboxFiltersRow {
    flex-direction: row;
    flex-wrap: wrap;
    gap: 1rem;
  }
  
  .checkboxWrapper {
    width: auto;
  }
  
  .dateInputs {
    flex-direction: row;
    align-items: center;
  }
  
  .dateInput {
    flex: 1;
  }
}

/* Tablets (768px and up) */
@media (min-width: 768px) {
  .selectFiltersRow {
    flex-direction: row;
    flex-wrap: wrap;
    gap: 1rem;
  }
  
  .filterWrapper {
    flex-direction: row;
    flex: 1 1 200px;
  }
}

/* Laptops/Desktops (1024px and up) */
@media (min-width: 1024px) {
  .filterControls {
    padding: 1.5rem;
  }
  
  .filterWrapper {
    flex-direction: row;
    flex: 1 1 220px;
  }
  
  .checkboxFiltersRow {
    justify-content: flex-start;
  }
}